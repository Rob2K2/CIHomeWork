name: Build, Push and Test Docker Image

on:
  push:
    branches:
      - main
      - develop
      - release/*

env:
  DOCKER_IMAGE: rob2k2/cihomework
  CONTAINER_NAME: ci-local-test

jobs:
  build:
    runs-on: [self-hosted, Windows, X64]

    steps:
      # 1️⃣ Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2️⃣ Docker login
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 3️⃣ Generate image tag (Windows CMD)
      - name: Generate image tag (Windows CMD)
        id: version
        shell: cmd
        run: |
          for /f "tokens=1-3 delims=/ " %%a in ("%date%") do (
            set DATE=%%c.%%a.%%b
          )
          echo TAG=v%DATE%-${{ github.run_number }}>> %GITHUB_ENV%

      # 4️⃣ Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ env.TAG }}
            ${{ env.DOCKER_IMAGE }}:${{ github.ref_name }}
            ${{ env.DOCKER_IMAGE }}:${{ github.sha }}

      # 5️⃣ Run container locally
      - name: Run container from image
        shell: cmd
        run: |
          docker run -d -p 5000:5000 --name %CONTAINER_NAME% ${{ env.DOCKER_IMAGE }}:latest

      # 6️⃣ Wait a few seconds for container startup
      - name: Wait for container startup
        shell: powershell
        run: Start-Sleep -Seconds 5

      # 7️⃣ Test container with curl (PowerShell)
      - name: Test container endpoint
        shell: powershell
        run: |
          try {
              $resp = Invoke-WebRequest -Uri http://localhost:5000 -UseBasicParsing -TimeoutSec 5
              if ($resp.StatusCode -eq 200) { Write-Host "✅ Container test passed" } else { throw "Non-200 response" }
          } catch {
              Write-Host "❌ Container test failed!"
              exit 1
          }

      # 8️⃣ Cleanup container
      - name: Cleanup container
        shell: cmd
        if: always()
        run: |
          docker stop %CONTAINER_NAME% || true
          docker rm %CONTAINER_NAME% || true

      # 9️⃣ Summary
      - name: Summary
        shell: cmd
        run: |
          echo "✅ Image uploaded and container tested successfully:"
          echo "- latest"
          echo "- ${{ env.TAG }}"
          echo "- ${{ github.ref_name }}"
          echo "- ${{ github.sha }}"
